[
  {"_id":{"$oid":"625ab58f85f26b8a71885123"},"id":"1","project_name":"Word Nerd","image_link":"./WordNerd.png","about_project":"Following a mobile-first approach to recreate 'Wordle', we fetched JSON word data , which I helped to sequentially generate a novel word. Validated and sanitised inputs protect the site from malicious users, before the data is parsed to logic for changing each corresponding key colour, by manipulating the DOM via data attributes.","skill_one":"JS","skill_two":"HTML","skill_three":"CSS","Git_Link":"https://github.com/iO-Academy/2022-dragons-wordle","Live_Link":"https://dev.io-academy.uk/projects/2022-jan/wordnerd/"},
  {"_id":{"$oid":"625ab58f85f26b8a71885124"},"id":"2","project_name":"Job Searcher","image_link":"./DragonJobs.png","about_project":"Our component tree guided our decision to fetch the API at the top of the structure, enabling us to use props, so that we could use object destructuring to output job details on our SASS styled front-end. I helped create the modal and table templates the data populates; with us achieving the ability to search multiple entities, and display the details of a single entity.","skill_one":"JS React","skill_two":"SASS","skill_three":"HTML","Git_Link":"https://github.com/iO-Academy/2022-dragons-jobSearch","Live_Link":"https://2022-jan-dragonsjobsearch.dev.io-academy.uk/"},
  {"_id":{"$oid":"625ab58f85f26b8a71885125"},"id":"3","project_name":"Dino Finder","image_link":"./DinoFinder.png","about_project":" Designed desktop first, and using a Hydrator entity, and Viewhelper, design pattern we created a unit testable application for displaying a dinosaur collection. I helped code the collection navigation button functionality and the unit test for it, as well as contributing to the hi-fidelity wireframe which guided the design and asset collection.","skill_one":"OOP PHP","skill_two":"SASS","skill_three":"MySQL","Git_Link":"https://github.com/iO-Academy/2022-jan-dragons-DinoFinder","Live_Link":"https://dev.io-academy.uk/projects/2022-jan/dino-finder/index.php"},
  {"_id":{"$oid":"625ab58f85f26b8a71885126"},"id":"4","project_name":"Products RESTful API","image_link":"./LSD_Products.png","about_project":"Using Node.js, with a Service & Controller design pattern in an Express framework, we created a back-end RESTful API for the management of stocks, and detailed Docs to go with it. For protection we sanitised and validated the HTTP requests and covered all route responses.","skill_one":"Node JS","skill_two":"Express","skill_three":"MySQL","Git_Link":"https://github.com/iO-Academy/2022-jan-products-api","Live_Link":" "},
  {"_id":{"$oid":"625ab58f85f26b8a71885127"},"id":"5","project_name":"Bird Up App","image_link":"./Birdup.png","about_project":"A solo collection project intended for practicing TypeScript and Atomic design. Designed the app architecture and hi-fidelity wireframes to guide the development process, and generated stories and tasks from a brief. (unfinished & commented)","skill_one":"TypeScript","skill_two":"React","skill_three":"MySQL","Git_Link":"https://github.com/Parsley-Afroman/birdup","Live_Link":" "},
  {"_id":{"$oid":"625ab58f85f26b8a71885127"},"id":"5","project_name":"Bird Up API","image_link":"./BirdupApi.png","about_project":"A solo RESTful API project intended for practicing TypeScript in Express alongside the use of JEST for testing. Using a Service & Controller design I created GET and POST endpoints for reading from, and adding an entity to, the DB. This has been added to a FE app called Birdup. (unfinished)","skill_one":"Node JS","skill_two":"Express","skill_three":"MySQL","Git_Link":"https://github.com/Parsley-Afroman/birdapi","Live_Link":" "}
]